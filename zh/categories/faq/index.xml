<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Faq on Jenkins X</title>
    <link>https://hferentschik.github.io/jenkins-x-website/zh/categories/faq/</link>
    <description>Recent content in Faq on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 20 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hferentschik.github.io/jenkins-x-website/zh/categories/faq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins 相关问题</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/jenkins/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/jenkins/</guid>
      <description>密码 安装在 Jenkins X 中的 Jenkins 没有提供修改管理员密码的页面，但是你可以通过配置文件 ~/.jx/jenkinsAuth.yaml 来获取密码。</description>
    </item>
    
    <item>
      <title>常见问题解答</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/faq/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/faq/</guid>
      <description>我们已经试图把一些常见的问题整理到这里。如果你遇到的问题没有在这里列出来，请让我们知道。
Jenkins X 是开源的吗？ 是的！Jenkins X 的所有源码和成品都是开源的；Apache 或 MIT 能保证这一点！
Jenkins X 是 Jenkins 的分支吗？ 不！Jenkins X 总是复用 Jenkins 核心，并尽可能把它配置作为 Kubenetes 的本地资源。
起初，Jenkins X 是 Jenkins 核心带着 Kubernetes 配置以及一些附加的插件，打包为一个 Helm 的 Chart。
随着时间的推移，我们希望 Jenkins X 项目可以推动 Jenkins 核心发生一些改变，以帮助 Jenkins 更加原生地支持云。例如：使用数据库或者 Kubernetes 资源来存储任务、运行和凭据，使得更加容易地支持像多 master 或单个 master。虽然，这些变化首先会在 Jenkins 核心中出现，但会被 Jenkins X 复用。
为什么要创建一个子项目？ 我们是 Kubernetes 和云的超级粉丝，并认为是软件运行的未来趋势。
然而，很多分支仍然想要通过：java -jar jenkins.war以常规的方式来运行 Jenkins。
因此，Jenkins X 子项目的想法，是为了100%关注在 Kubernetes 和云原生使用场景，并让 Jenkins 核心项目关注经典的 Java 方式。
Jenkins 最强大的是它的灵活性和巨大的插件生态。分离 Jenkins X 子项目帮助社区并行地迭代并快速改进云原生和 Jenkins 经典的发行。</description>
    </item>
    
    <item>
      <title>安装问题</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/setup/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/setup/</guid>
      <description>如何在 Jenkins X 的安装当中添加用户？ Jenkins X 假设每个用户都可以访问运行 Jenkins X 的 kubernetes 开发集群。
如果您的用户无权访问 kubernetes 集群，我们需要设置他们的 ~/.kube/config 文件，以便他们可以访问它。
如果您正在使用 Google 的 GKE ，那么您可以浏览 GKE Console 以查看所有集群，然后单击开发集群旁边的 Connect 按钮，然后可以运行复制/粘贴命令以连接到集群。
对于其他集群，我们计划编写一些 CLI 命令来导出和导入kube配置。
当用户拥有了 kubernetes 集群的访问权限 当用户拥有了 kubernetes 集群的访问权限：
 安装 jx 二进制文件  如果 Jenkins X 安装在命名空间 jx 中，那么应该 切换你的上下文 到命名空间 jx 当中：
jx ns jx  测试安装成功可以输入下列命令：
jx get env jx open  查看环境和任何开发工具，如 Jenkins 或 Nexus 控制台。</description>
    </item>
    
    <item>
      <title>常见问题解答</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/issues/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/issues/</guid>
      <description>我们已经试图把一些常见的问题整理到这里。如果你遇到的问题没有在这里列出来，请让我们知道。
无法创建 minikube 集群 如果你使用的是 Mac，那么， hyperkit 是最好的虚拟机驱动——但首先需要你安装最新的Docker for Mac。之后，尝试 jx create cluster minikube。
如果，你的 minikube 启动失败，那么你可以尝试：
minikube delete rm -rf ~/.minikube  如果运行 rm 失败，你可能需要：
sudo rm -rf ~/.minikube  现在，再试一次 jx create cluster minikube ，这样有帮助吗？有时候，从安装的旧版本中一些过时的证书或者文件会导致 minikube 失败。
有时候，当虚拟机出错时，重启可能会有帮助。
另外，你还可以尝试下面的 minikube 指令
 安装 minikube 运行 minikube start  Minkube 和 hyperkit: 无法找到 IP 地址 如果你在 Mac 上通过 hyperkit 使用 minikube，并发现 minikube 启动失败的日志如下：
Temporary Error: Could not find an IP address for 46:0:41:86:41:6e Temporary Error: Could not find an IP address for 46:0:41:86:41:6e Temporary Error: Could not find an IP address for 46:0:41:86:41:6e Temporary Error: Could not find an IP address for 46:0:41:86:41:6e  这里可能会给你提示，minikube 和 hyperkit 相关问题。</description>
    </item>
    
    <item>
      <title>技术性问题</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/technology/</link>
      <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/technology/</guid>
      <description>什么是 Helm? helm 是 Kubernetes 的开源包管理器。
它和其他的包管理工具（brew, yum, npm等）类似，有一个或者更多的包仓库可以安装（在 helm 中叫做 charts 和 kubernetes 的主题保持一致），可以搜索、安装和升级。
一个 helm chart 基本上是带版本的 kubernetes yaml 压缩包 ，可以轻松地安装在任何 kubnernetes 集群上。
Helm 通过文件 requirements.yaml 支持组合（一个 chart 可以包含其他 charts）。
什么是 Skaffold? skaffold 是一个开源的工具，用于在 Kubernetes 集群中构建 docker 镜像，并通过 kubectl 或 helm 部署、升级。
在 kubernetes 集群中构建 docker 镜像的挑战有几种方法来实现：
 使用本地 docker daemon 和 kubernetes 集群的 socket 使用一个云服务，例如：Google Cloud Builder 使用无 docker-daemon，例如：kaniko 不需要访问权限  Skaffold 的好处是把你的代码或 CLI 从细节中抽象出来；你可以在文件 skaffold.yaml 中配置构建 docker 镜像的策略，切换 docker daemon、GCB 或 kaniko等。</description>
    </item>
    
    <item>
      <title>开发问题</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/faq/develop/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/faq/develop/</guid>
      <description>如何注入特定的环境配置 Jenkins X 中的每个环境都在 git 存储库中定义; 我们使用 GitOps 来管理每个环境中的所有更改，例如：
 添加/删除应用 更改应用程序的版本（更新或回滚） 使用环境特定值配置任何应用程序  前两个项在您环境的 git 存储库的 env/requirements.yaml 文件中定义。 后者在 env/values.yaml 文件中定义。
Helm charts 使用 values.yaml文件，以便您可以覆盖 charts 中的任何配置以修改设置，例如任何资源或资源配置上的标签或注释（例如 replicaCount ）或将环境变量等内容传递给 Deployment 。
所以，如果你想改变 staging 环境中应用 foo 的 replicaCount ，那么通过 jx get env 查找 staging 环境的 git 存储库，找到 git URL 。
导航到 env/values.yaml 文件并添加/编辑一些 YAML ，如下所示：
foo:replicaCount:5 将该更改作为 Pull Request 提交，以便它可以通过 CI 测试并且进行任何同行评审/批准; 然后当它合并到它的 master 分支它将修改 foo 应用程序的 replicaCount（假设在 env/requirements.yaml 文件中有一个名为 foo 的 chart ）</description>
    </item>
    
  </channel>
</rss>