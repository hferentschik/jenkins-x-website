<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>入门 on Jenkins X</title>
    <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/</link>
    <description>Recent content in 入门 on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hferentschik.github.io/jenkins-x-website/zh/getting-started/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>获取 jx</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install/</guid>
      <description>根据你的操作系统选择最适合的指令：
macOS 在 Mac 上你可以使用 brew：
brew tap jenkins-x/jx brew install jx  或者，如果您尚未安装 brew ，并且喜欢手动安装的话，请执行如下指令安装:
curl -L https://github.com/jenkins-x/jx/releases/download/v1.3.810/jx-darwin-amd64.tar.gz | tar xzv sudo mv jx /usr/local/bin Linux curl -L https://github.com/jenkins-x/jx/releases/download/v1.3.810/jx-linux-amd64.tar.gz | tar xzv sudo mv jx /usr/local/bin 其他平台 下载二进制包 jx 然后加到环境变量 $PATH 中
或者，你可以尝试 自行构建。然而，如果你要自行构建的话，请注意移除所有旧版本的 jx 二进制文件，这样你的本地构建才会出现在环境变量 $PATH 的第一位 :)
获得帮助 查找可用的命令类型：
jx  或者，获取指定命令的帮助，例如： create 命令，可以输入：
jx help create  你也可以浏览 jx 命令参考文档</description>
    </item>
    
    <item>
      <title>创建新集群</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/create-cluster/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/create-cluster/</guid>
      <description>通过已经安装的 Jenkins X 创建一个新的集群，使用命令 jx create cluster 。
如下所示，支持很多不同的公有云提供商。
为了最好的入门体验，我们目前推荐使用 Google Container Engine (GKE)。如果你没有谷歌云账号的话，谷歌云平台提供三百美元的额度。查看 https://console.cloud.google.com/freetrial
这有一个小的演示，同时展示 GKE、AKS 和 Minikube。在不同的设备（云）上启动需要花点时间，请耐心等待！
 使用谷歌云 (GKE) 使用命令 jx create cluster gke ：
jx create cluster gke  该命令假设你有一个谷歌账户，并且已经设置了一个默认项目，可以再里面创建 Kubernetes 集群。
现在 使用 Jenkins X 更快速地开发应用。
使用亚马逊 (AWS) 使用命令 jx create cluster aws ：
jx create cluster aws  这会通过你的亚马逊账户，使用命令 kops 创建一个新的 Kubernetes 集群并安装 Jenkins X。
来试试这个，我们建议你参照 AWS Workshop for Kubernetes 设置 AWS Cloud9 IDE。</description>
    </item>
    
    <item>
      <title>创建自定义 Builder</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/create-custom-builder/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/create-custom-builder/</guid>
      <description>在 Jenkins X 中，可以创建字段自定义的 Builder （也就是 POD templates）或覆盖已有的。你只需要基于 builder-base 或它的 slim 版本的镜像。
从零创建一个自定义 Builder Builder 镜像 首先，您需要为 Builder 创建一个 docker 镜像。从 Dockerfile 开始的一个实例可能类似于：
FROM jenkinsxio/builder-base:latest # Install your tools and libraries RUN yum install -y gcc openssl-devel CMD [&amp;quot;gcc&amp;quot;]  现在，您可以构建并发布这个镜像到您的 registry：
export BUILDER_IMAGE=&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt; docker build -t ${BUILDER_IMAGE} . docker push ${BUILDER_IMAGE}  别担心，当新的镜像需要构建时，您无需每次手动执行这些步骤。Jenkins X 可以为您管理这些。您只需要把 Dockerfile 推送到类似于这个代码仓库中。然后，根据您的组织名称来调整 Jenkinsfile ，并使用下面的命令导入 Jenkins X 平台：
jx import --url &amp;lt;REPOSITORY_URL&amp;gt;  之后，您每次推送一个变更，Jenkins X 将会自动地构建和发布镜像。</description>
    </item>
    
    <item>
      <title>在 Kubernetes 上安装</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install-on-cluster/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install-on-cluster/</guid>
      <description>Jenkins X 可以在 Kubernetes 1.8 以及更高版本上安装。需要的依赖有：
 RBAC 是可用的 启用 docker 私有仓库。这样的话，流水线可以在 Kubernetes 集群中使用 docker 仓库（通常不是公共的因此不支持 https）。后续，你可以修改你的流水线来使用其他仓库。  通过 kops 启用私有仓库 注意，如果你是在 AWS 环境中，你可能会想使用 jx create aws 命令来帮你自动化完成所有步骤！
如果你是通过 kops 创建的 kubernetes 集群，那么你可以这么做：
kops edit cluster  然后，确保在 YAML 文件的章节 spec 中有 docker 配置：
...spec:docker:insecureRegistry:100.64.0.0/10logDriver:&amp;#34;&amp;#34; 上面的 IP 范围 100.64.0.0/10 是 AWS 上的，但你需要修改为其他 Kubernetes 集群的；它依赖于 Kubernetes 服务的 IP 范围。
保存后，你可以参考下面的命令进行验证：
kops get cluster -oyaml  然后查找 insecureRegistry 章节。
现在，确保这些修改在你的集群类型上是激活的：
kops update cluster --yes kops rolling-update cluster --yes  你现在可以继续了！</description>
    </item>
    
    <item>
      <title>安装过程中发生了什么</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install-on-cluster-what-happens/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/install-on-cluster-what-happens/</guid>
      <description>Jenkins X 命令行在安装 Jenkins X 平台时会做如下事情：
安装二进制客户端来管理你的集群  如果您运行在 Mac OS X 上，Jenkins X 会使用 Homebrew 来安装不同的命令行。不存在就会安装。
  安装 kubectl kubectl 是 Kubernetes 的命令行。它允许您和您的 Kubernetes 集群通过 API server 交互。
安装 Helm Jenkins X 将会安装 helm 客户端 - (可能是 helm 2.x 或 helm 3)，如果它不在您的环境变量里的话。Helm 是用于打包 Kubernetes 中的应用或资源（也叫做 charts），并迅速地成为标准。
安装云提供商的命令行 如果您在使用公有云，会有相关的命令行来与之交互。当通过 jx create cluster 命令来安装时，您的云提供商相关的二进制如果不在环境变量里的话，也会被安装。
 AKS 集群（Azure）的 az GKE 集群 (Google Cloud) 的 gcloud for GKE cluster (Google Cloud) AWS 集群 (Amazon Web Services) 的 kops AWS EKS 集群的 eksctl OKS 集群 (Oracle Cloud) 的 oci  如果您想要在本地通过 minikube 或 minishift 运行 Jenkins X 的话，下面的二进制会被添加：</description>
    </item>
    
    <item>
      <title>下一步？</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/next/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/next/</guid>
      <description>好的，现在你已经 安装了 jx 命令 ，并完成了下面的步骤：
 通过 Jenkins X 创建 Kubernetes 集群 在已有的 kubernetes 集群上安装 Jenkins X  那么，下一步呢？
在 研发 章节中可能会有你想要尝试的内容，例如：
 创建一个新的 Spring Boot 应用并导入 Jenkins X 创建一个新的快速开始并导入 Jenkins X 把已有的源码导入 Jenkins X 浏览 可以浏览流水线，构建，应用和活动  </description>
    </item>
    
    <item>
      <title>配置</title>
      <link>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/config/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hferentschik.github.io/jenkins-x-website/zh/getting-started/config/</guid>
      <description>Jenkins X 应该为你的云服务商提供默认可用的配置。例如：如果你使用 AWS 或 EKS，Jenkins X 自动地使用 ECR。
然而，你可以修改 Jenkins X 使用的 helm charts 的配置。
要做到这一点，你需要在运行命令 jx create cluster 或 jx install 的目录下创建一个文件 myvalues.yaml 。
然后，这个 YAML 文件可以覆盖 Jenkins X 中的任何 charts 中的 values.yaml 文件。
例如：如果你希望在安装过程中禁用 Nexus，而使用不同主机上的一个独立的 Nexus，那么，你可以使用 myvalues.yaml 中的服务链接来替代：
nexus:enabled:falsenexusServiceLink:enabled:trueexternalName:&amp;#34;nexus.jx.svc.cluster.local&amp;#34; 要禁用并使用 chart museum 的服务链接的话添加：
chartmuseum:enabled:falsechartmuseumServiceLink:enabled:trueexternalName:&amp;#34;jenkins-x-chartmuseum.jx.svc.cluster.local&amp;#34; Docker Registry We try and use the best defaults for each platform for the Docker Registry; e.g. using ECR on AWS.
然而，你也可以在执行命令 jx create cluster 或 jx install 时，通过选项 --docker-registry 来指定。</description>
    </item>
    
  </channel>
</rss>